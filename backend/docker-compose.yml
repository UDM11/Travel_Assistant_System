version: '3.8'

services:
  # Main FastAPI application
  travel-assistant-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./travel.db
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_PATH=/app/data/chroma
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL database (uncomment if using PostgreSQL)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: travel_assistant
  #     POSTGRES_USER: travel_user
  #     POSTGRES_PASSWORD: travel_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - travel-assistant-api
  #   restart: unless-stopped

volumes:
  redis_data:
  # postgres_data:
